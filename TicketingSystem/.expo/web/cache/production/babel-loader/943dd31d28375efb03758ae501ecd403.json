{"ast":null,"code":"import{insertColorStopsIntoArray}from\"./helpers\";var LINEAR_GRADIENT=1;export default function LinearGradient(stops,x1,y1,x2,y2){var type=LINEAR_GRADIENT;if(arguments.length<5){var angle=(x1==null?270:x1)*Math.PI/180;var x=Math.cos(angle);var y=-Math.sin(angle);var l=(Math.abs(x)+Math.abs(y))/2;x*=l;y*=l;x1=0.5-x;x2=0.5+x;y1=0.5-y;y2=0.5+y;this._bb=true;}else{this._bb=false;}var brushData=[type,+x1,+y1,+x2,+y2];insertColorStopsIntoArray(stops,brushData,5);this._brush=brushData;return this;}","map":{"version":3,"sources":["D:/SLIIT/3rd Year 2nd sem/CSSE/Final_Project_CSSE/frontendCSSE/TicketingSystem/node_modules/@react-native-community/art/lib/LinearGradient.js"],"names":["insertColorStopsIntoArray","LINEAR_GRADIENT","LinearGradient","stops","x1","y1","x2","y2","type","arguments","length","angle","Math","PI","x","cos","y","sin","l","abs","_bb","brushData","_brush"],"mappings":"AASA,OAAQA,yBAAR,iBAGA,GAAMC,CAAAA,eAAe,CAAG,CAAxB,CAEA,cAAe,SAASC,CAAAA,cAAT,CACbC,KADa,CAEbC,EAFa,CAGbC,EAHa,CAIbC,EAJa,CAKbC,EALa,CAMN,CACP,GAAMC,CAAAA,IAAI,CAAGP,eAAb,CAEA,GAAIQ,SAAS,CAACC,MAAV,CAAmB,CAAvB,CAA0B,CACxB,GAAMC,CAAAA,KAAK,CAAI,CAACP,EAAE,EAAI,IAAN,CAAa,GAAb,CAAmBA,EAApB,EAA0BQ,IAAI,CAACC,EAAhC,CAAsC,GAApD,CAEA,GAAIC,CAAAA,CAAC,CAAGF,IAAI,CAACG,GAAL,CAASJ,KAAT,CAAR,CACA,GAAIK,CAAAA,CAAC,CAAG,CAACJ,IAAI,CAACK,GAAL,CAASN,KAAT,CAAT,CACA,GAAMO,CAAAA,CAAC,CAAG,CAACN,IAAI,CAACO,GAAL,CAASL,CAAT,EAAcF,IAAI,CAACO,GAAL,CAASH,CAAT,CAAf,EAA8B,CAAxC,CAEAF,CAAC,EAAII,CAAL,CACAF,CAAC,EAAIE,CAAL,CAEAd,EAAE,CAAG,IAAMU,CAAX,CACAR,EAAE,CAAG,IAAMQ,CAAX,CACAT,EAAE,CAAG,IAAMW,CAAX,CACAT,EAAE,CAAG,IAAMS,CAAX,CACA,KAAKI,GAAL,CAAW,IAAX,CACD,CAfD,IAeO,CACL,KAAKA,GAAL,CAAW,KAAX,CACD,CAED,GAAMC,CAAAA,SAAS,CAAG,CAACb,IAAD,CAAO,CAACJ,EAAR,CAAY,CAACC,EAAb,CAAiB,CAACC,EAAlB,CAAsB,CAACC,EAAvB,CAAlB,CACAP,yBAAyB,CAACG,KAAD,CAAQkB,SAAR,CAAmB,CAAnB,CAAzB,CACA,KAAKC,MAAL,CAAcD,SAAd,CACA,MAAO,KAAP,CACD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {insertColorStopsIntoArray} from './helpers';\nimport type {GradientStops, Brush} from './types';\n\nconst LINEAR_GRADIENT = 1;\n\nexport default function LinearGradient(\n  stops: GradientStops,\n  x1?: number,\n  y1?: number,\n  x2?: number,\n  y2?: number,\n): Brush {\n  const type = LINEAR_GRADIENT;\n\n  if (arguments.length < 5) {\n    const angle = ((x1 == null ? 270 : x1) * Math.PI) / 180;\n\n    let x = Math.cos(angle);\n    let y = -Math.sin(angle);\n    const l = (Math.abs(x) + Math.abs(y)) / 2;\n\n    x *= l;\n    y *= l;\n\n    x1 = 0.5 - x;\n    x2 = 0.5 + x;\n    y1 = 0.5 - y;\n    y2 = 0.5 + y;\n    this._bb = true;\n  } else {\n    this._bb = false;\n  }\n\n  const brushData = [type, +x1, +y1, +x2, +y2];\n  insertColorStopsIntoArray(stops, brushData, 5);\n  this._brush = brushData;\n  return this;\n}\n"]},"metadata":{},"sourceType":"module"}