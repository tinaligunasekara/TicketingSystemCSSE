{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import{Root}from\"native-base\";import{Container,Text}from\"native-base\";import*as Font from\"expo-font\";import{Ionicons}from\"@expo/vector-icons\";import React,{Component}from\"react\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{NavigationContainer}from\"@react-navigation/native\";import{createStackNavigator}from\"@react-navigation/stack\";import Dashboard from\"./Component/Dashboard/Dashboard\";import{Assets}from\"expo-asset\";import{AppLoading}from\"expo\";import{createDrawerNavigator}from\"@react-navigation/drawer\";import{color}from\"react-native-reanimated\";import{DrawerContent}from\"./Component/DrawerContent\";import profile from\"./Component/Profile/Profile\";import Login from\"./Component/Login/Login\";import Register from\"./Component/Login/Register\";import ForeignRegister from\"./Component/Login/ForeignRegister\";import AccountDetails from\"./Component/AccountDetails/AccountDetails\";import RefreshAccount from\"./Component/AccountDetails/RefreshAccount\";import TransportManager from\"./Component/Admin/TransportManager\";import StartRide from\"./Component/StartRide/StartRide\";function cacheImages(images){return images.map(function(image){if(typeof image===\"string\"){return Image.Prefetch(image);}else{return Assets.fromModule(image).downloadAsync();}});}var Stack=createStackNavigator();var Drawer=createDrawerNavigator();var StackScreen=function StackScreen(){return React.createElement(Stack.Navigator,{initialRouteName:\"AppDrawer\"},React.createElement(Stack.Screen,{name:\"Register\",component:Register,options:{headerShown:false}}),React.createElement(Stack.Screen,{name:\"AppDrawer\",component:AppDrawer,options:{headerShown:false}}),React.createElement(Stack.Screen,{name:\"Dashboard\",component:Dashboard,options:{headerShown:false}}),React.createElement(Stack.Screen,{name:\"profile\",component:profile,options:{headerShown:false}}),React.createElement(Stack.Screen,{name:\"Login\",component:Login,options:{headerShown:false}}),React.createElement(Stack.Screen,{name:\"ForeignRegister\",component:ForeignRegister,options:{headerShown:false}}),React.createElement(Stack.Screen,{name:\"AccountDetails\",component:AccountDetails,options:{headerShown:false}}),React.createElement(Stack.Screen,{name:\"RefreshAccount\",component:RefreshAccount,options:{headerShown:false}}),React.createElement(Stack.Screen,{name:\"TransportManager\",component:TransportManager,options:{headerShown:false}}),React.createElement(Stack.Screen,{name:\"StartRide\",component:StartRide,options:{headerShown:false}}));};var AppDrawer=function AppDrawer(){return React.createElement(Root,null,React.createElement(Drawer.Navigator,{drawerContent:function drawerContent(props){return React.createElement(DrawerContent,props);}},React.createElement(Drawer.Screen,{name:\"DashboardDrawer\",component:Dashboard}),React.createElement(Drawer.Screen,{name:\"profileDrawer\",component:profile}),React.createElement(Drawer.Screen,{name:\"LoginDrawer\",component:Login}),React.createElement(Drawer.Screen,{name:\"AccountDetailsDrawer\",component:AccountDetails}),React.createElement(Drawer.Screen,{name:\"RefreshAccountDrawer\",component:RefreshAccount}),React.createElement(Drawer.Screen,{name:\"TransportManagerDrawer\",component:TransportManager}),React.createElement(Drawer.Screen,{name:\"StartRideDrawer\",component:StartRide})));};var App=function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={isReady:false};return _this;}_createClass(App,[{key:\"_loadAssetsAsync\",value:function _loadAssetsAsync(){var imageAssets;return _regeneratorRuntime.async(function _loadAssetsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:imageAssets=cacheImages([require(\"./assets/bground.jpg\")]);_context.next=3;return _regeneratorRuntime.awrap(Promise.all(_toConsumableArray(imageAssets)));case 3:case\"end\":return _context.stop();}}},null,null,null,Promise);}},{key:\"render\",value:function render(){var _this2=this;if(!this.state.isReady){return React.createElement(AppLoading,{startAsync:this._loadAssetsAsync,onFinish:function onFinish(){return _this2.setState({isReady:true});},onError:console.warn});}return React.createElement(NavigationContainer,null,React.createElement(StackScreen,null));}}]);return App;}(Component);export{App as default};","map":{"version":3,"sources":["D:/SLIIT/3rd Year 2nd sem/CSSE/Final_Project_CSSE/frontendCSSE/TicketingSystem/App.js"],"names":["Root","Container","Text","Font","Ionicons","React","Component","NavigationContainer","createStackNavigator","Dashboard","Assets","AppLoading","createDrawerNavigator","color","DrawerContent","profile","Login","Register","ForeignRegister","AccountDetails","RefreshAccount","TransportManager","StartRide","cacheImages","images","map","image","Image","Prefetch","fromModule","downloadAsync","Stack","Drawer","StackScreen","headerShown","AppDrawer","props","App","state","isReady","imageAssets","require","Promise","all","_loadAssetsAsync","setState","console","warn"],"mappings":"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","sourcesContent":["import { Root } from \"native-base\";\r\nimport { Container, Text } from \"native-base\";\r\nimport * as Font from \"expo-font\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport React, { Component } from \"react\";\r\nimport { TouchableOpacity } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Dashboard from \"./Component/Dashboard/Dashboard\";\r\nimport { Assets } from \"expo-asset\";\r\nimport { AppLoading } from \"expo\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport { color } from \"react-native-reanimated\";\r\nimport { DrawerContent } from \"./Component/DrawerContent\";\r\nimport profile from \"./Component/Profile/Profile\";\r\nimport Login from \"./Component/Login/Login\";\r\nimport Register from \"./Component/Login/Register\";\r\nimport ForeignRegister from \"./Component/Login/ForeignRegister\";\r\nimport AccountDetails from \"./Component/AccountDetails/AccountDetails\";\r\nimport RefreshAccount from \"./Component/AccountDetails/RefreshAccount\";\r\nimport TransportManager from \"./Component/Admin/TransportManager\";\r\nimport StartRide from \"./Component/StartRide/StartRide\";\r\n\r\nfunction cacheImages(images) {\r\n  return images.map((image) => {\r\n    if (typeof image === \"string\") {\r\n      return Image.Prefetch(image);\r\n    } else {\r\n      return Assets.fromModule(image).downloadAsync();\r\n    }\r\n  });\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst StackScreen = () => {\r\n  return (\r\n    <Stack.Navigator initialRouteName=\"AppDrawer\">\r\n      <Stack.Screen\r\n        name=\"Register\"\r\n        component={Register}\r\n        options={{ headerShown: false }}\r\n      />\r\n\r\n      <Stack.Screen\r\n        name=\"AppDrawer\"\r\n        component={AppDrawer}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Dashboard\"\r\n        component={Dashboard}\r\n        options={{ headerShown: false }}\r\n      />\r\n\r\n      <Stack.Screen\r\n        name=\"profile\"\r\n        component={profile}\r\n        options={{ headerShown: false }}\r\n      />\r\n\r\n      <Stack.Screen\r\n        name=\"Login\"\r\n        component={Login}\r\n        options={{ headerShown: false }}\r\n      />\r\n\r\n      <Stack.Screen\r\n        name=\"ForeignRegister\"\r\n        component={ForeignRegister}\r\n        options={{ headerShown: false }}\r\n      />\r\n\r\n      <Stack.Screen\r\n        name=\"AccountDetails\"\r\n        component={AccountDetails}\r\n        options={{ headerShown: false }}\r\n      />\r\n\r\n      <Stack.Screen\r\n        name=\"RefreshAccount\"\r\n        component={RefreshAccount}\r\n        options={{ headerShown: false }}\r\n      />\r\n\r\n<Stack.Screen\r\n        name=\"TransportManager\"\r\n        component={TransportManager}\r\n        options={{ headerShown: false }}\r\n      />\r\n\r\n      <Stack.Screen\r\n        name=\"StartRide\"\r\n        component={StartRide}\r\n        options={{ headerShown: false }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nconst AppDrawer = () => {\r\n  return (\r\n    <Root>\r\n      <Drawer.Navigator drawerContent={(props) => <DrawerContent {...props} />}>\r\n        <Drawer.Screen name=\"DashboardDrawer\" component={Dashboard} />\r\n        <Drawer.Screen name=\"profileDrawer\" component={profile} />\r\n        <Drawer.Screen name=\"LoginDrawer\" component={Login} />\r\n        <Drawer.Screen name=\"AccountDetailsDrawer\" component={AccountDetails} />\r\n        <Drawer.Screen name=\"RefreshAccountDrawer\" component={RefreshAccount} />\r\n        <Drawer.Screen name=\"TransportManagerDrawer\" component={TransportManager} />\r\n        <Drawer.Screen name=\"StartRideDrawer\" component={StartRide} />\r\n      </Drawer.Navigator>\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isReady: false,\r\n    };\r\n  }\r\n\r\n  async _loadAssetsAsync() {\r\n    const imageAssets = cacheImages([require(\"./assets/bground.jpg\")]);\r\n    await Promise.all([...imageAssets]);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isReady) {\r\n      return (\r\n        <AppLoading\r\n          startAsync={this._loadAssetsAsync}\r\n          onFinish={() => this.setState({ isReady: true })}\r\n          onError={console.warn}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <NavigationContainer>\r\n        <StackScreen />\r\n      </NavigationContainer>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}