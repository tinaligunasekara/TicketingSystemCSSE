{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from\"react\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Modal from\"react-native-web/dist/exports/Modal\";import Button from\"react-native-web/dist/exports/Button\";import AsyncStorage from\"react-native-web/dist/exports/AsyncStorage\";import Svg,{Image,Circle,ClipPath}from\"react-native-svg\";import Animated,{Easing}from\"react-native-reanimated\";import{TapGestureHandler,State}from\"react-native-gesture-handler\";import Success from\"../success\";import Error from\"../error\";import axios from'axios';import constants from\"../Constants/constants\";var _Dimensions$get=Dimensions.get(\"window\"),width=_Dimensions$get.width,height=_Dimensions$get.height;var Value=Animated.Value,event=Animated.event,block=Animated.block,cond=Animated.cond,eq=Animated.eq,set=Animated.set,Clock=Animated.Clock,startClock=Animated.startClock,stopClock=Animated.stopClock,debug=Animated.debug,timing=Animated.timing,clockRunning=Animated.clockRunning,interpolate=Animated.interpolate,Extrapolate=Animated.Extrapolate,concat=Animated.concat;function runTiming(clock,value,dest){var state={finished:new Value(0),position:new Value(0),time:new Value(0),frameTime:new Value(0)};var config={duration:1000,toValue:new Value(0),easing:Easing.inOut(Easing.ease)};return block([cond(clockRunning(clock),0,[set(state.finished,0),set(state.time,0),set(state.position,value),set(state.frameTime,0),set(config.toValue,dest),startClock(clock)]),timing(clock,state,config),cond(state.finished,debug(\"stop clock\",stopClock(clock))),state.position]);}var Login=function(_Component){_inherits(Login,_Component);var _super=_createSuper(Login);function Login(props){var _this;_classCallCheck(this,Login);_this=_super.call(this,props);_this.manageNavigation=function(){if(_this.state.username===\"\"){alert(\"Please enter username\");}else if(_this.state.password===\"\"){alert(\"plese enter password\");}else{console.log(constants.spring_backend_url+'/api/user/login/'+_this.state.username+'/'+_this.state.password);console.log('kkkk');axios.get(constants.spring_backend_url+'/api/user/login/'+_this.state.username+'/'+_this.state.password).then(function(res){console.log(res.data);if(res.data!==null){_this.setState({loginState:true,modalState:true});_this.props.navigation.navigate(\"AppDrawer\");AsyncStorage.setItem('tokenNumber',res.data.tokenNumber);AsyncStorage.setItem('name',res.data.name);AsyncStorage.setItem('address',res.data.address);AsyncStorage.setItem('nic',res.data.nic);AsyncStorage.setItem('phoneNumber',res.data.mobile);AsyncStorage.setItem('email',res.data.email);}else{_this.setState({loginState:false,modalState:true});}}).catch(function(error){console.log(error);});}};_this.state={modalState:false,loginState:false,username:\"\",password:\"\"};_this.buttonOpacity=new Value(1);_this.onStateChange=event([{nativeEvent:function nativeEvent(_ref){var state=_ref.state;return block([cond(eq(state,State.END),set(_this.buttonOpacity,runTiming(new Clock(),1,0)))]);}}]);_this.onCloseState=event([{nativeEvent:function nativeEvent(_ref2){var state=_ref2.state;return block([cond(eq(state,State.END),set(_this.buttonOpacity,runTiming(new Clock(),0,1)))]);}}]);_this.buttonY=interpolate(_this.buttonOpacity,{inputRange:[0,1],outputRange:[100,0],extrapolate:Extrapolate.CLAMP});_this.bgY=interpolate(_this.buttonOpacity,{inputRange:[0,1],outputRange:[-height/3-50,0],extrapolate:Extrapolate.CLAMP});_this.textInputZindex=interpolate(_this.buttonOpacity,{inputRange:[0,1],outputRange:[1,-1],extrapolate:Extrapolate.CLAMP});_this.textInputY=interpolate(_this.buttonOpacity,{inputRange:[0,1],outputRange:[0,100],extrapolate:Extrapolate.CLAMP});_this.textInputOpacity=interpolate(_this.buttonOpacity,{inputRange:[0,1],outputRange:[1,0],extrapolate:Extrapolate.CLAMP});_this.rotateCross=interpolate(_this.buttonOpacity,{inputRange:[0,1],outputRange:[180,360],extrapolate:Extrapolate.CLAMP});_this.logoY=interpolate(_this.buttonOpacity,{inputRange:[0,1],outputRange:[height/3+40,0],extrapolate:Extrapolate.CLAMP});return _this;}_createClass(Login,[{key:\"updateValue\",value:function updateValue(text,field){if(field==\"username\"){this.setState({username:text});}if(field==\"password\"){this.setState({password:text});}}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(View,{style:{flex:1,backgroundColor:\"white\",justifyContent:\"flex-end\"}},React.createElement(Animated.View,{style:_objectSpread(_objectSpread({},StyleSheet.absoluteFill),{},{transform:[{translateY:this.bgY}]})},React.createElement(Svg,{height:height+50,width:width},React.createElement(ClipPath,{id:\"clip\"},React.createElement(Circle,{r:height+50,cx:width/2})),React.createElement(Image,{href:require(\"../../assets/bground.jpg\"),height:height+50,width:width,preserveAspectRatio:\"xMidYMid slice\",clipPath:\"url(#clip)\"})),React.createElement(Animated.View,{style:{position:\"absolute\",alignSelf:\"center\",alignItems:\"center\",marginTop:120,transform:[{translateY:this.logoY}]}},React.createElement(Svg,{height:250,width:250},React.createElement(Image,{href:require(\"../../assets/logo.png\"),position:\"absolute\",height:\"100%\",width:\"100%\"})),React.createElement(Text,{style:{fontWeight:\"bold\",fontSize:18,color:\"white\"}},\"TICKETING SYSTEM\"))),React.createElement(View,{style:{height:height/3,justifyContent:\"center\"}},React.createElement(TapGestureHandler,{onHandlerStateChange:this.onStateChange},React.createElement(Animated.View,{style:_objectSpread(_objectSpread({},styles.button),{},{backgroundColor:\"#154360\",opacity:this.buttonOpacity,borderColor:\"white\",borderWidth:2,transform:[{translateY:this.buttonY}]})},React.createElement(TouchableOpacity,null,React.createElement(Text,{style:{fontSize:18,fontWeight:\"bold\",color:\"white\"}},\"LOGIN\")))),React.createElement(TapGestureHandler,{onHandlerStateChange:function onHandlerStateChange(){return _this2.props.navigation.navigate(\"Register\");}},React.createElement(Animated.View,{style:_objectSpread(_objectSpread({},styles.button),{},{opacity:this.buttonOpacity,transform:[{translateY:this.buttonY}]})},React.createElement(TouchableOpacity,null,React.createElement(Text,{style:{fontSize:18,fontWeight:\"bold\",color:\"#154360\"}},\"REGISTER\")))),React.createElement(Animated.View,{style:_objectSpread(_objectSpread({height:height/3},StyleSheet.absoluteFill),{},{top:null,zIndex:this.textInputZindex,opacity:this.textInputOpacity,transform:[{translateY:this.textInputY}],justifyContent:\"center\"})},React.createElement(TapGestureHandler,{onHandlerStateChange:this.onCloseState},React.createElement(Animated.View,{style:styles.closeButton},React.createElement(Animated.Text,{style:{fontSize:15,color:\"#154360\",transform:[{rotate:concat(this.rotateCross,\"deg\")}]}},\"X\"))),React.createElement(TextInput,{placeholder:\"USERNAME\",style:_objectSpread(_objectSpread({},styles.textInput),{},{borderColor:\"#154360\",borderWidth:1,backgroundColor:\"white\"}),placeholderTextColor:\"#154360\",onChangeText:function onChangeText(text){return _this2.updateValue(text,\"username\");}}),React.createElement(TextInput,{placeholder:\"PASSWORD\",secureTextEntry:true,style:_objectSpread(_objectSpread({},styles.textInput),{},{borderColor:\"#154360\",borderWidth:1,backgroundColor:\"white\"}),placeholderTextColor:\"#154360\",onChangeText:function onChangeText(text){return _this2.updateValue(text,\"password\");}}),React.createElement(View,null,this.state.loginState?React.createElement(View,null,React.createElement(Modal,{transparent:true,visible:this.state.modalState},React.createElement(View,{style:{backgroundColor:\"#000000aa\",flex:1,alignItems:\"center\",justifyContent:\"center\"}},React.createElement(View,{style:{backgroundColor:\"#ffffff\",paddingVertical:20,borderTopColor:\"black\",paddingHorizontal:10,borderRadius:23}},React.createElement(TouchableOpacity,{onPress:function onPress(){_this2.setState({modalState:false});}},React.createElement(View,{style:{flexDirection:\"row\",height:20,width:300,alignItems:\"center\",justifyContent:\"center\"}},React.createElement(View,{style:{alignItems:\"center\",justifyContent:\"center\"}},React.createElement(Text,{style:{fontWeight:\"bold\",fontSize:18,color:\"#222222\"}},\"Successfull !\")))),React.createElement(View,{style:{borderBottomColor:\"#d3d3d3\",borderBottomWidth:1,padding:10}}),React.createElement(View,{style:{justifyContent:\"center\",alignItems:\"center\",marginTop:10}},React.createElement(Success,null),React.createElement(Text,{style:{color:\"#7F8C8D\",marginBottom:10}},\"Login Successful\")),React.createElement(View,{style:{marginTop:15,height:40,justifyContent:\"center\",alignItems:\"center\"}},React.createElement(TouchableOpacity,{onPress:function onPress(){_this2.setState({modalState:false});},style:_objectSpread(_objectSpread({},styles.button),{},{justifyContent:\"center\",alignItems:\"center\",width:180,height:40,borderRadius:30,backgroundColor:\"#154360\",marginRight:10})},React.createElement(Text,{style:{fontSize:20,fontWeight:\"bold\",color:\"#ffffff\"}},\"OK\"))))))):React.createElement(View,null,React.createElement(Modal,{transparent:true,visible:this.state.modalState},React.createElement(View,{style:{backgroundColor:\"#000000aa\",flex:1,alignItems:\"center\",justifyContent:\"center\"}},React.createElement(View,{style:{backgroundColor:\"#ffffff\",paddingVertical:20,borderTopColor:\"black\",paddingHorizontal:10,borderRadius:23}},React.createElement(TouchableOpacity,{onPress:function onPress(){_this2.setState({modalState:false});}},React.createElement(View,{style:{flexDirection:\"row\",height:20,width:300,alignItems:\"center\",justifyContent:\"center\"}},React.createElement(View,{style:{alignItems:\"center\",justifyContent:\"center\"}},React.createElement(Text,{style:{fontWeight:\"bold\",fontSize:18,color:\"#222222\"}},\"Login Unsuccessfull !\")))),React.createElement(View,{style:{borderBottomColor:\"#d3d3d3\",borderBottomWidth:1,padding:10}}),React.createElement(View,{style:{justifyContent:\"center\",alignItems:\"center\",marginTop:10}},React.createElement(Error,null),React.createElement(Text,{style:{color:\"#7F8C8D\",marginBottom:10}},\"Incorrect Username or password !\")),React.createElement(View,{style:{marginTop:15,height:40,justifyContent:\"center\",alignItems:\"center\"}},React.createElement(TouchableOpacity,{onPress:function onPress(){_this2.setState({modalState:false});},style:_objectSpread(_objectSpread({},styles.button),{},{justifyContent:\"center\",alignItems:\"center\",width:180,height:40,borderRadius:30,backgroundColor:\"#154360\",marginRight:10})},React.createElement(Text,{style:{fontSize:20,fontWeight:\"bold\",color:\"#ffffff\"}},\"OK\")))))))),React.createElement(TouchableOpacity,{onPress:this.manageNavigation},React.createElement(Animated.View,{style:_objectSpread(_objectSpread({},styles.button),{},{backgroundColor:\"#154360\"})},React.createElement(Text,{style:{fontSize:20,fontWeight:\"bold\",color:\"#ffffff\"}},\"Login\"))))));}}]);return Login;}(Component);export default Login;var styles=StyleSheet.create({container:{flex:1,alignItems:\"center\",justifyContent:\"center\"},button:{backgroundColor:\"white\",height:70,marginHorizontal:20,borderRadius:35,alignItems:\"center\",justifyContent:\"center\",marginVertical:5,shadowColor:\"#000\",shadowOffset:{width:0,height:7},shadowOpacity:0.41,shadowRadius:9.11,elevation:14},closeButton:{height:40,width:40,borderRadius:20,backgroundColor:\"white\",alignItems:\"center\",justifyContent:\"center\",position:\"absolute\",top:-20,left:width/2-20,shadowColor:\"#000\",shadowOffset:{width:0,height:7},shadowOpacity:0.41,shadowRadius:9.11,elevation:14},textInput:{height:50,borderRadius:25,borderWidth:0.5,marginHorizontal:20,paddingLeft:10,marginVertical:5,borderColor:\"rgba(0,0,0,0.2)\"},modalView:{width:\"70%\",margin:10,backgroundColor:\"white\",borderRadius:15,alignItems:\"center\",shadowColor:\"#000\",shadowOffset:{width:0,height:2},shadowOpacity:0.25,shadowRadius:3.84,elevation:5}});","map":{"version":3,"sources":["D:/SLIIT/3rd Year 2nd sem/CSSE/Final_Project_CSSE/frontendCSSE/TicketingSystem/Component/Login/Login.js"],"names":["React","Component","Svg","Image","Circle","ClipPath","Animated","Easing","TapGestureHandler","State","Success","Error","axios","constants","Dimensions","get","width","height","Value","event","block","cond","eq","set","Clock","startClock","stopClock","debug","timing","clockRunning","interpolate","Extrapolate","concat","runTiming","clock","value","dest","state","finished","position","time","frameTime","config","duration","toValue","easing","inOut","ease","Login","props","manageNavigation","username","alert","password","console","log","spring_backend_url","then","res","data","setState","loginState","modalState","navigation","navigate","AsyncStorage","setItem","tokenNumber","name","address","nic","mobile","email","catch","error","buttonOpacity","onStateChange","nativeEvent","END","onCloseState","buttonY","inputRange","outputRange","extrapolate","CLAMP","bgY","textInputZindex","textInputY","textInputOpacity","rotateCross","logoY","text","field","flex","backgroundColor","justifyContent","StyleSheet","absoluteFill","transform","translateY","require","alignSelf","alignItems","marginTop","fontWeight","fontSize","color","styles","button","opacity","borderColor","borderWidth","top","zIndex","closeButton","rotate","textInput","updateValue","paddingVertical","borderTopColor","paddingHorizontal","borderRadius","flexDirection","borderBottomColor","borderBottomWidth","padding","marginBottom","marginRight","create","container","marginHorizontal","marginVertical","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","left","paddingLeft","modalView","margin"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Dimensions,\r\n    TouchableOpacity,\r\n    TextInput,\r\n    Modal,\r\n    Button,\r\n} from \"react-native\";\r\nimport { AsyncStorage } from 'react-native';\r\nimport Svg, {Image, Circle, ClipPath} from \"react-native-svg\";\r\nimport Animated, {Easing} from \"react-native-reanimated\";\r\nimport {TapGestureHandler, State} from \"react-native-gesture-handler\";\r\nimport Success from \"../success\";\r\nimport Error from \"../error\";\r\nimport axios from 'axios';\r\nimport constants from \"../Constants/constants\";\r\n\r\nconst {width, height} = Dimensions.get(\"window\");\r\n\r\nconst {\r\n    Value,\r\n    event,\r\n    block,\r\n    cond,\r\n    eq,\r\n    set,\r\n    Clock,\r\n    startClock,\r\n    stopClock,\r\n    debug,\r\n    timing,\r\n    clockRunning,\r\n    interpolate,\r\n    Extrapolate,\r\n    concat,\r\n} = Animated;\r\n\r\nfunction runTiming(clock, value, dest) {\r\n    const state = {\r\n        finished: new Value(0),\r\n        position: new Value(0),\r\n        time: new Value(0),\r\n        frameTime: new Value(0),\r\n    };\r\n\r\n    const config = {\r\n        duration: 1000,\r\n        toValue: new Value(0),\r\n        easing: Easing.inOut(Easing.ease),\r\n    };\r\n\r\n    return block([\r\n        cond(clockRunning(clock), 0, [\r\n            set(state.finished, 0),\r\n            set(state.time, 0),\r\n            set(state.position, value),\r\n            set(state.frameTime, 0),\r\n            set(config.toValue, dest),\r\n            startClock(clock),\r\n        ]),\r\n        timing(clock, state, config),\r\n        cond(state.finished, debug(\"stop clock\", stopClock(clock))),\r\n        state.position,\r\n    ]);\r\n}\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modalState: false,\r\n            loginState: false,\r\n            username: \"\",\r\n            password: \"\",\r\n        };\r\n        this.buttonOpacity = new Value(1);\r\n\r\n        this.onStateChange = event([\r\n            {\r\n                nativeEvent: ({state}) =>\r\n                    block([\r\n                        cond(\r\n                            eq(state, State.END),\r\n                            set(this.buttonOpacity, runTiming(new Clock(), 1, 0))\r\n                        ),\r\n                    ]),\r\n            },\r\n        ]);\r\n\r\n        this.onCloseState = event([\r\n            {\r\n                nativeEvent: ({state}) =>\r\n                    block([\r\n                        cond(\r\n                            eq(state, State.END),\r\n                            set(this.buttonOpacity, runTiming(new Clock(), 0, 1))\r\n                        ),\r\n                    ]),\r\n            },\r\n        ]);\r\n\r\n        this.buttonY = interpolate(this.buttonOpacity, {\r\n            inputRange: [0, 1],\r\n            outputRange: [100, 0],\r\n            extrapolate: Extrapolate.CLAMP,\r\n        });\r\n\r\n        this.bgY = interpolate(this.buttonOpacity, {\r\n            inputRange: [0, 1],\r\n            outputRange: [-height / 3 - 50, 0],\r\n            extrapolate: Extrapolate.CLAMP,\r\n        });\r\n\r\n        this.textInputZindex = interpolate(this.buttonOpacity, {\r\n            inputRange: [0, 1],\r\n            outputRange: [1, -1],\r\n            extrapolate: Extrapolate.CLAMP,\r\n        });\r\n\r\n        this.textInputY = interpolate(this.buttonOpacity, {\r\n            inputRange: [0, 1],\r\n            outputRange: [0, 100],\r\n            extrapolate: Extrapolate.CLAMP,\r\n        });\r\n\r\n        this.textInputOpacity = interpolate(this.buttonOpacity, {\r\n            inputRange: [0, 1],\r\n            outputRange: [1, 0],\r\n            extrapolate: Extrapolate.CLAMP,\r\n        });\r\n\r\n        this.rotateCross = interpolate(this.buttonOpacity, {\r\n            inputRange: [0, 1],\r\n            outputRange: [180, 360],\r\n            extrapolate: Extrapolate.CLAMP,\r\n        });\r\n        this.logoY = interpolate(this.buttonOpacity, {\r\n            inputRange: [0, 1],\r\n            outputRange: [height / 3 + 40, 0],\r\n            extrapolate: Extrapolate.CLAMP,\r\n        });\r\n    }\r\n\r\n    manageNavigation = () => {\r\n\r\n\r\n        if (this.state.username === \"\") {\r\n            alert(\"Please enter username\");\r\n        } else if (this.state.password === \"\") {\r\n            alert(\"plese enter password\");\r\n        } else {\r\n            console.log(constants.spring_backend_url + '/api/user/login/' + this.state.username + '/' + this.state.password)\r\n            console.log('kkkk')\r\n            axios.get(constants.spring_backend_url + '/api/user/login/' + this.state.username + '/' + this.state.password)\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    if (res.data !== null) {\r\n                        this.setState({\r\n                            loginState: true,\r\n                            modalState: true,\r\n                        });\r\n                        this.props.navigation.navigate(\"AppDrawer\");\r\n                        AsyncStorage.setItem(\r\n                            'tokenNumber',\r\n                            res.data.tokenNumber\r\n                        );\r\n                        AsyncStorage.setItem(\r\n                            'name',\r\n                            res.data.name\r\n                        );\r\n\r\n                        AsyncStorage.setItem(\r\n                            'address',\r\n                            res.data.address\r\n                        );\r\n                        AsyncStorage.setItem(\r\n                            'nic',\r\n                            res.data.nic\r\n                        );\r\n                        AsyncStorage.setItem(\r\n                            'phoneNumber',\r\n                            res.data.mobile\r\n                        );\r\n                        AsyncStorage.setItem(\r\n                            'email',\r\n                            res.data.email\r\n                        );\r\n                    } else {\r\n                        this.setState({\r\n                            loginState: false,\r\n                            modalState: true,\r\n                        });\r\n                    }\r\n                }).catch(function (error) {\r\n                    console.log(error)\r\n            })\r\n\r\n        }\r\n    };\r\n\r\n    updateValue(text, field) {\r\n        if (field == \"username\") {\r\n            this.setState({\r\n                username: text,\r\n            });\r\n        }\r\n        if (field == \"password\") {\r\n            this.setState({\r\n                password: text,\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View\r\n                style={{\r\n                    flex: 1,\r\n                    backgroundColor: \"white\",\r\n                    justifyContent: \"flex-end\",\r\n                }}\r\n            >\r\n                <Animated.View\r\n                    style={{\r\n                        ...StyleSheet.absoluteFill,\r\n                        transform: [{translateY: this.bgY}],\r\n                    }}\r\n                >\r\n                    <Svg height={height + 50} width={width}>\r\n                        <ClipPath id=\"clip\">\r\n                            <Circle r={height + 50} cx={width / 2}/>\r\n                        </ClipPath>\r\n                        <Image\r\n                            href={require(\"../../assets/bground.jpg\")}\r\n                            height={height + 50}\r\n                            width={width}\r\n                            preserveAspectRatio=\"xMidYMid slice\"\r\n                            clipPath=\"url(#clip)\"\r\n                        />\r\n                    </Svg>\r\n\r\n                    <Animated.View\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            alignSelf: \"center\",\r\n                            alignItems: \"center\",\r\n                            marginTop: 120,\r\n                            transform: [{translateY: this.logoY}],\r\n                        }}\r\n                    >\r\n                        <Svg height={250} width={250}>\r\n                            <Image\r\n                                href={require(\"../../assets/logo.png\")}\r\n                                position=\"absolute\"\r\n                                height=\"100%\"\r\n                                width=\"100%\"\r\n                            />\r\n                        </Svg>\r\n                        <Text style={{fontWeight: \"bold\", fontSize: 18, color: \"white\"}}>\r\n                            TICKETING SYSTEM\r\n                        </Text>\r\n                    </Animated.View>\r\n                </Animated.View>\r\n                <View style={{height: height / 3, justifyContent: \"center\"}}>\r\n                    <TapGestureHandler onHandlerStateChange={this.onStateChange}>\r\n                        <Animated.View\r\n                            style={{\r\n                                ...styles.button,\r\n                                backgroundColor: \"#154360\",\r\n                                opacity: this.buttonOpacity,\r\n                                borderColor: \"white\",\r\n                                borderWidth: 2,\r\n                                transform: [{translateY: this.buttonY}],\r\n                            }}\r\n                        >\r\n                            <TouchableOpacity>\r\n                                <Text\r\n                                    style={{fontSize: 18, fontWeight: \"bold\", color: \"white\"}}\r\n                                >\r\n                                    LOGIN\r\n                                </Text>\r\n                            </TouchableOpacity>\r\n                        </Animated.View>\r\n                    </TapGestureHandler>\r\n                    <TapGestureHandler\r\n                        onHandlerStateChange={() =>\r\n                            this.props.navigation.navigate(\"Register\")\r\n                        }\r\n                    >\r\n                        <Animated.View\r\n                            style={{\r\n                                ...styles.button,\r\n                                opacity: this.buttonOpacity,\r\n                                transform: [{translateY: this.buttonY}],\r\n                            }}\r\n                        >\r\n                            <TouchableOpacity>\r\n                                <Text\r\n                                    style={{fontSize: 18, fontWeight: \"bold\", color: \"#154360\"}}\r\n                                >\r\n                                    REGISTER\r\n                                </Text>\r\n                            </TouchableOpacity>\r\n                        </Animated.View>\r\n                    </TapGestureHandler>\r\n                    <Animated.View\r\n                        style={{\r\n                            height: height / 3,\r\n                            ...StyleSheet.absoluteFill,\r\n                            top: null,\r\n                            zIndex: this.textInputZindex,\r\n                            opacity: this.textInputOpacity,\r\n                            transform: [{translateY: this.textInputY}],\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <TapGestureHandler onHandlerStateChange={this.onCloseState}>\r\n                            <Animated.View style={styles.closeButton}>\r\n                                <Animated.Text\r\n                                    style={{\r\n                                        fontSize: 15,\r\n                                        color: \"#154360\",\r\n                                        transform: [{rotate: concat(this.rotateCross, \"deg\")}],\r\n                                    }}\r\n                                >\r\n                                    X\r\n                                </Animated.Text>\r\n                            </Animated.View>\r\n                        </TapGestureHandler>\r\n\r\n                        <TextInput\r\n                            placeholder=\"USERNAME\"\r\n                            style={{\r\n                                ...styles.textInput,\r\n                                borderColor: \"#154360\",\r\n                                borderWidth: 1,\r\n                                backgroundColor: \"white\",\r\n                            }}\r\n                            placeholderTextColor=\"#154360\"\r\n                            onChangeText={(text) => this.updateValue(text, \"username\")}\r\n                        />\r\n                        <TextInput\r\n                            placeholder=\"PASSWORD\"\r\n                            secureTextEntry={true}\r\n                            style={{\r\n                                ...styles.textInput,\r\n                                borderColor: \"#154360\",\r\n                                borderWidth: 1,\r\n                                backgroundColor: \"white\",\r\n                            }}\r\n                            placeholderTextColor=\"#154360\"\r\n                            onChangeText={(text) => this.updateValue(text, \"password\")}\r\n                        />\r\n\r\n                        <View>\r\n                            {this.state.loginState ? (\r\n                                <View>\r\n                                    <Modal transparent={true} visible={this.state.modalState}>\r\n                                        <View\r\n                                            style={{\r\n                                                backgroundColor: \"#000000aa\",\r\n                                                flex: 1,\r\n                                                alignItems: \"center\",\r\n                                                justifyContent: \"center\",\r\n                                            }}\r\n                                        >\r\n                                            <View\r\n                                                style={{\r\n                                                    backgroundColor: \"#ffffff\",\r\n                                                    paddingVertical: 20,\r\n                                                    borderTopColor: \"black\",\r\n                                                    paddingHorizontal: 10,\r\n                                                    borderRadius: 23,\r\n                                                }}\r\n                                            >\r\n                                                <TouchableOpacity\r\n                                                    onPress={() => {\r\n                                                        this.setState({modalState: false});\r\n                                                    }}\r\n                                                >\r\n                                                    <View\r\n                                                        style={{\r\n                                                            flexDirection: \"row\",\r\n                                                            height: 20,\r\n                                                            width: 300,\r\n                                                            alignItems: \"center\",\r\n                                                            justifyContent: \"center\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <View\r\n                                                            style={{\r\n                                                                alignItems: \"center\",\r\n                                                                justifyContent: \"center\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <Text\r\n                                                                style={{\r\n                                                                    fontWeight: \"bold\",\r\n                                                                    fontSize: 18,\r\n                                                                    color: \"#222222\",\r\n                                                                }}\r\n                                                            >\r\n                                                                Successfull !\r\n                                                            </Text>\r\n                                                        </View>\r\n                                                    </View>\r\n                                                </TouchableOpacity>\r\n                                                <View\r\n                                                    style={{\r\n                                                        borderBottomColor: \"#d3d3d3\",\r\n                                                        borderBottomWidth: 1,\r\n                                                        padding: 10,\r\n                                                    }}\r\n                                                ></View>\r\n\r\n                                                <View\r\n                                                    style={{\r\n                                                        justifyContent: \"center\",\r\n                                                        alignItems: \"center\",\r\n                                                        marginTop: 10,\r\n                                                    }}\r\n                                                >\r\n                                                    <Success/>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            color: \"#7F8C8D\",\r\n                                                            marginBottom: 10,\r\n                                                        }}\r\n                                                    >\r\n                                                        Login Successful\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View\r\n                                                    style={{\r\n                                                        marginTop: 15,\r\n                                                        height: 40,\r\n                                                        justifyContent: \"center\",\r\n                                                        alignItems: \"center\",\r\n                                                    }}\r\n                                                >\r\n                                                    <TouchableOpacity\r\n                                                        onPress={() => {\r\n                                                            this.setState({modalState: false});\r\n                                                        }}\r\n                                                        style={{\r\n                                                            ...styles.button,\r\n                                                            justifyContent: \"center\",\r\n                                                            alignItems: \"center\",\r\n                                                            width: 180,\r\n                                                            height: 40,\r\n                                                            borderRadius: 30,\r\n                                                            backgroundColor: \"#154360\",\r\n                                                            marginRight: 10,\r\n                                                        }}\r\n                                                    >\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontSize: 20,\r\n                                                                fontWeight: \"bold\",\r\n                                                                color: \"#ffffff\",\r\n                                                            }}\r\n                                                        >\r\n                                                            OK\r\n                                                        </Text>\r\n                                                    </TouchableOpacity>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </Modal>\r\n                                </View>\r\n                            ) : (\r\n                                <View>\r\n                                    <Modal transparent={true} visible={this.state.modalState}>\r\n                                        <View\r\n                                            style={{\r\n                                                backgroundColor: \"#000000aa\",\r\n                                                flex: 1,\r\n                                                alignItems: \"center\",\r\n                                                justifyContent: \"center\",\r\n                                            }}\r\n                                        >\r\n                                            <View\r\n                                                style={{\r\n                                                    backgroundColor: \"#ffffff\",\r\n                                                    paddingVertical: 20,\r\n                                                    borderTopColor: \"black\",\r\n                                                    paddingHorizontal: 10,\r\n                                                    borderRadius: 23,\r\n                                                }}\r\n                                            >\r\n                                                <TouchableOpacity\r\n                                                    onPress={() => {\r\n                                                        this.setState({modalState: false});\r\n                                                    }}\r\n                                                >\r\n                                                    <View\r\n                                                        style={{\r\n                                                            flexDirection: \"row\",\r\n                                                            height: 20,\r\n                                                            width: 300,\r\n                                                            alignItems: \"center\",\r\n                                                            justifyContent: \"center\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <View\r\n                                                            style={{\r\n                                                                alignItems: \"center\",\r\n                                                                justifyContent: \"center\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <Text\r\n                                                                style={{\r\n                                                                    fontWeight: \"bold\",\r\n                                                                    fontSize: 18,\r\n                                                                    color: \"#222222\",\r\n                                                                }}\r\n                                                            >\r\n                                                                Login Unsuccessfull !\r\n                                                            </Text>\r\n                                                        </View>\r\n                                                    </View>\r\n                                                </TouchableOpacity>\r\n                                                <View\r\n                                                    style={{\r\n                                                        borderBottomColor: \"#d3d3d3\",\r\n                                                        borderBottomWidth: 1,\r\n                                                        padding: 10,\r\n                                                    }}\r\n                                                ></View>\r\n\r\n                                                <View\r\n                                                    style={{\r\n                                                        justifyContent: \"center\",\r\n                                                        alignItems: \"center\",\r\n                                                        marginTop: 10,\r\n                                                    }}\r\n                                                >\r\n                                                    <Error/>\r\n\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            color: \"#7F8C8D\",\r\n                                                            marginBottom: 10,\r\n                                                        }}\r\n                                                    >\r\n                                                        Incorrect Username or password !\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View\r\n                                                    style={{\r\n                                                        marginTop: 15,\r\n                                                        height: 40,\r\n                                                        justifyContent: \"center\",\r\n                                                        alignItems: \"center\",\r\n                                                    }}\r\n                                                >\r\n                                                    <TouchableOpacity\r\n                                                        onPress={() => {\r\n                                                            this.setState({modalState: false});\r\n                                                        }}\r\n                                                        style={{\r\n                                                            ...styles.button,\r\n                                                            justifyContent: \"center\",\r\n                                                            alignItems: \"center\",\r\n                                                            width: 180,\r\n                                                            height: 40,\r\n                                                            borderRadius: 30,\r\n                                                            backgroundColor: \"#154360\",\r\n                                                            marginRight: 10,\r\n                                                        }}\r\n                                                    >\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontSize: 20,\r\n                                                                fontWeight: \"bold\",\r\n                                                                color: \"#ffffff\",\r\n                                                            }}\r\n                                                        >\r\n                                                            OK\r\n                                                        </Text>\r\n                                                    </TouchableOpacity>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </Modal>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        <TouchableOpacity onPress={this.manageNavigation}>\r\n                            <Animated.View\r\n                                style={{...styles.button, backgroundColor: \"#154360\"}}\r\n                            >\r\n                                <Text\r\n                                    style={{fontSize: 20, fontWeight: \"bold\", color: \"#ffffff\"}}\r\n                                >\r\n                                    Login\r\n                                </Text>\r\n                            </Animated.View>\r\n                        </TouchableOpacity>\r\n                    </Animated.View>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    button: {\r\n        backgroundColor: \"white\",\r\n        height: 70,\r\n        marginHorizontal: 20,\r\n        borderRadius: 35,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginVertical: 5,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 7,\r\n        },\r\n        shadowOpacity: 0.41,\r\n        shadowRadius: 9.11,\r\n\r\n        elevation: 14,\r\n    },\r\n    closeButton: {\r\n        height: 40,\r\n        width: 40,\r\n        borderRadius: 20,\r\n        backgroundColor: \"white\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        position: \"absolute\",\r\n        top: -20,\r\n        left: width / 2 - 20,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 7,\r\n        },\r\n        shadowOpacity: 0.41,\r\n        shadowRadius: 9.11,\r\n\r\n        elevation: 14,\r\n    },\r\n    textInput: {\r\n        height: 50,\r\n        borderRadius: 25,\r\n        borderWidth: 0.5,\r\n        marginHorizontal: 20,\r\n        paddingLeft: 10,\r\n        marginVertical: 5,\r\n        borderColor: \"rgba(0,0,0,0.2)\",\r\n    },\r\n\r\n    modalView: {\r\n        width: \"70%\",\r\n        margin: 10,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 15,\r\n        alignItems: \"center\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n\r\n        elevation: 5,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}