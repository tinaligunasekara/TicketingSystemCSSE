{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\SLIIT\\\\3rd Year 2nd sem\\\\UEE\\\\FarmManagementPro\\\\Component\\\\Register\\\\register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Svg, { Image, Circle, ClipPath } from \"react-native-svg\";\nimport Animated, { Easing } from \"react-native-reanimated\";\nimport { TapGestureHandler, State } from \"react-native-gesture-handler\";\nimport Success from \"../success\";\nimport Error from \"../error\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Value = Animated.Value,\n    event = Animated.event,\n    block = Animated.block,\n    cond = Animated.cond,\n    eq = Animated.eq,\n    set = Animated.set,\n    Clock = Animated.Clock,\n    startClock = Animated.startClock,\n    stopClock = Animated.stopClock,\n    debug = Animated.debug,\n    timing = Animated.timing,\n    clockRunning = Animated.clockRunning,\n    interpolate = Animated.interpolate,\n    Extrapolate = Animated.Extrapolate,\n    concat = Animated.concat;\n\nfunction runTiming(clock, value, dest) {\n  var state = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    frameTime: new Value(0)\n  };\n  var config = {\n    duration: 1000,\n    toValue: new Value(0),\n    easing: Easing.inOut(Easing.ease)\n  };\n  return block([cond(clockRunning(clock), 0, [set(state.finished, 0), set(state.time, 0), set(state.position, value), set(state.frameTime, 0), set(config.toValue, dest), startClock(clock)]), timing(clock, state, config), cond(state.finished, debug(\"stop clock\", stopClock(clock))), state.position]);\n}\n\nvar SignIn = function (_Component) {\n  _inherits(SignIn, _Component);\n\n  var _super = _createSuper(SignIn);\n\n  function SignIn(props) {\n    var _this;\n\n    _classCallCheck(this, SignIn);\n\n    _this = _super.call(this, props);\n\n    _this.manageNavigation = function () {\n      console.log(\"username : \" + _this.state.username);\n      console.log(\"password : \" + _this.state.password);\n      console.log(\"modalstate : \" + _this.state.modalState);\n      console.log(\"loginstate : \" + _this.state.loginState);\n\n      if (_this.state.username === \"\") {\n        alert(\"Please enter username\");\n      } else if (_this.state.password === \"\") {\n        alert(\"plese enter password\");\n      } else {\n        if (_this.state.username == \"admin\" && _this.state.password == \"admin\") {\n          _this.setState({\n            loginState: true,\n            modalState: true\n          });\n\n          _this.props.navigation.navigate(\"AppDrawer\");\n        } else {\n          _this.setState({\n            loginState: false,\n            modalState: true\n          });\n        }\n      }\n    };\n\n    _this.state = {\n      modalState: false,\n      loginState: false,\n      username: \"\",\n      password: \"\"\n    };\n    _this.buttonOpacity = new Value(1);\n    _this.onStateChange = event([{\n      nativeEvent: function nativeEvent(_ref) {\n        var state = _ref.state;\n        return block([cond(eq(state, State.END), set(_this.buttonOpacity, runTiming(new Clock(), 1, 0)))]);\n      }\n    }]);\n    _this.onCloseState = event([{\n      nativeEvent: function nativeEvent(_ref2) {\n        var state = _ref2.state;\n        return block([cond(eq(state, State.END), set(_this.buttonOpacity, runTiming(new Clock(), 0, 1)))]);\n      }\n    }]);\n    _this.buttonY = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [100, 0],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.bgY = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [-height / 3 - 50, 0],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.textInputZindex = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [1, -1],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.textInputY = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [0, 100],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.textInputOpacity = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [1, 0],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.rotateCross = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [180, 360],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.logoY = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [height / 3 + 40, 0],\n      extrapolate: Extrapolate.CLAMP\n    });\n    return _this;\n  }\n\n  _createClass(SignIn, [{\n    key: \"updateValue\",\n    value: function updateValue(text, field) {\n      if (field == \"username\") {\n        this.setState({\n          username: text\n        });\n      }\n\n      if (field == \"password\") {\n        this.setState({\n          password: text\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"white\",\n          justifyContent: \"flex-end\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.View, {\n        style: _objectSpread(_objectSpread({}, StyleSheet.absoluteFill), {}, {\n          transform: [{\n            translateY: this.bgY\n          }]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }\n      }, React.createElement(Svg, {\n        height: height + 50,\n        width: width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      }, React.createElement(ClipPath, {\n        id: \"clip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }\n      }, React.createElement(Circle, {\n        r: height + 50,\n        cx: width / 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }\n      })), React.createElement(Image, {\n        href: require(\"../../assets/bg.jpg\"),\n        height: height + 50,\n        width: width,\n        preserveAspectRatio: \"xMidYMid slice\",\n        clipPath: \"url(#clip)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }\n      })), React.createElement(Animated.View, {\n        style: {\n          position: \"absolute\",\n          alignSelf: \"center\",\n          alignItems: \"center\",\n          marginTop: 120,\n          transform: [{\n            translateY: this.logoY\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }\n      }, React.createElement(Svg, {\n        height: 250,\n        width: 250,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        href: require(\"../../assets/logo.png\"),\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }\n      })), React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 18,\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }\n      }, \"FARM MANAGEMENT PRO\"))), React.createElement(View, {\n        style: {\n          height: height / 3,\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 9\n        }\n      }, React.createElement(TapGestureHandler, {\n        onHandlerStateChange: this.onStateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: _objectSpread(_objectSpread({}, styles.button), {}, {\n          backgroundColor: \"#0E6655\",\n          opacity: this.buttonOpacity,\n          borderColor: \"white\",\n          borderWidth: 2,\n          transform: [{\n            translateY: this.buttonY\n          }]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 18,\n          fontWeight: \"bold\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }\n      }, \"LOGIN\")))), React.createElement(TapGestureHandler, {\n        onHandlerStateChange: function onHandlerStateChange() {\n          return _this2.props.navigation.navigate(\"registration\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: _objectSpread(_objectSpread({}, styles.button), {}, {\n          opacity: this.buttonOpacity,\n          transform: [{\n            translateY: this.buttonY\n          }]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 18,\n          fontWeight: \"bold\",\n          color: \"#0E6655\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }\n      }, \"REGISTER\")))), React.createElement(Animated.View, {\n        style: _objectSpread(_objectSpread({\n          height: height / 3\n        }, StyleSheet.absoluteFill), {}, {\n          top: null,\n          zIndex: this.textInputZindex,\n          opacity: this.textInputOpacity,\n          transform: [{\n            translateY: this.textInputY\n          }],\n          justifyContent: \"center\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }\n      }, React.createElement(TapGestureHandler, {\n        onHandlerStateChange: this.onCloseState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }\n      }, React.createElement(Animated.View, {\n        style: styles.closeButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }\n      }, React.createElement(Animated.Text, {\n        style: {\n          fontSize: 15,\n          color: \"#0E6655\",\n          transform: [{\n            rotate: concat(this.rotateCross, \"deg\")\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }\n      }, \"X\"))), React.createElement(TextInput, {\n        placeholder: \"USERNAME\",\n        style: _objectSpread(_objectSpread({}, styles.textInput), {}, {\n          borderColor: \"#0E6655\",\n          borderWidth: 1,\n          backgroundColor: \"white\"\n        }),\n        placeholderTextColor: \"#0E6655\",\n        onChangeText: function onChangeText(text) {\n          return _this2.updateValue(text, \"username\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"PASSWORD\",\n        secureTextEntry: true,\n        style: _objectSpread(_objectSpread({}, styles.textInput), {}, {\n          borderColor: \"#0E6655\",\n          borderWidth: 1,\n          backgroundColor: \"white\"\n        }),\n        placeholderTextColor: \"#0E6655\",\n        onChangeText: function onChangeText(text) {\n          return _this2.updateValue(text, \"password\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }\n      }, this.state.loginState ? React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 17\n        }\n      }, React.createElement(Modal, {\n        transparent: true,\n        visible: this.state.modalState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: \"#000000aa\",\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: \"#ffffff\",\n          paddingVertical: 20,\n          borderTopColor: \"black\",\n          paddingHorizontal: 10,\n          borderRadius: 23\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 23\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setState({\n            modalState: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          height: 20,\n          width: 300,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 27\n        }\n      }, React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 18,\n          color: \"#222222\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 31\n        }\n      }, \"Login Successful !\")), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 31\n        }\n      }, \"X\")))), React.createElement(View, {\n        style: {\n          borderBottomColor: \"#d3d3d3\",\n          borderBottomWidth: 1,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 25\n        }\n      }), React.createElement(Success, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: {\n          marginTop: 15,\n          height: 40,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setState({\n            modalState: false\n          });\n        },\n        style: _objectSpread(_objectSpread({}, styles.button), {}, {\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: 180,\n          height: 40,\n          borderRadius: 30,\n          backgroundColor: \"#0083ce\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 27\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\",\n          color: \"#ffffff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 29\n        }\n      }, \"OK\"))))))) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 17\n        }\n      }, React.createElement(Modal, {\n        transparent: true,\n        visible: this.state.modalState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: \"#000000aa\",\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: \"#ffffff\",\n          paddingVertical: 20,\n          borderTopColor: \"black\",\n          paddingHorizontal: 10,\n          borderRadius: 23\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 23\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setState({\n            modalState: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          height: 20,\n          width: 300,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 27\n        }\n      }, React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 18,\n          color: \"#222222\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 31\n        }\n      }, \"Incorrect Username or Password !\")), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 31\n        }\n      }, \"X\")))), React.createElement(View, {\n        style: {\n          borderBottomColor: \"#d3d3d3\",\n          borderBottomWidth: 1,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 25\n        }\n      }), React.createElement(Error, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: {\n          marginTop: 15,\n          height: 40,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setState({\n            modalState: false\n          });\n        },\n        style: _objectSpread(_objectSpread({}, styles.button), {}, {\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: 180,\n          height: 40,\n          borderRadius: 30,\n          backgroundColor: \"#0083ce\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 27\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\",\n          color: \"#ffffff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 29\n        }\n      }, \"OK\")))))))), React.createElement(TouchableOpacity, {\n        onPress: this.manageNavigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }\n      }, React.createElement(Animated.View, {\n        style: _objectSpread(_objectSpread({}, styles.button), {}, {\n          backgroundColor: \"#0E6655\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\",\n          color: \"#ffffff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 17\n        }\n      }, \"Login\"))))));\n    }\n  }]);\n\n  return SignIn;\n}(Component);\n\nexport default SignIn;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    backgroundColor: \"white\",\n    height: 70,\n    marginHorizontal: 20,\n    borderRadius: 35,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginVertical: 5,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 7\n    },\n    shadowOpacity: 0.41,\n    shadowRadius: 9.11,\n    elevation: 14\n  },\n  closeButton: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: -20,\n    left: width / 2 - 20,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 7\n    },\n    shadowOpacity: 0.41,\n    shadowRadius: 9.11,\n    elevation: 14\n  },\n  textInput: {\n    height: 50,\n    borderRadius: 25,\n    borderWidth: 0.5,\n    marginHorizontal: 20,\n    paddingLeft: 10,\n    marginVertical: 5,\n    borderColor: \"rgba(0,0,0,0.2)\"\n  },\n  modalView: {\n    width: \"70%\",\n    margin: 10,\n    backgroundColor: \"white\",\n    borderRadius: 15,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  }\n});","map":{"version":3,"sources":["D:/SLIIT/3rd Year 2nd sem/UEE/FarmManagementPro/Component/Register/register.js"],"names":["React","Component","Svg","Image","Circle","ClipPath","Animated","Easing","TapGestureHandler","State","Success","Error","Dimensions","get","width","height","Value","event","block","cond","eq","set","Clock","startClock","stopClock","debug","timing","clockRunning","interpolate","Extrapolate","concat","runTiming","clock","value","dest","state","finished","position","time","frameTime","config","duration","toValue","easing","inOut","ease","SignIn","props","manageNavigation","console","log","username","password","modalState","loginState","alert","setState","navigation","navigate","buttonOpacity","onStateChange","nativeEvent","END","onCloseState","buttonY","inputRange","outputRange","extrapolate","CLAMP","bgY","textInputZindex","textInputY","textInputOpacity","rotateCross","logoY","text","field","flex","backgroundColor","justifyContent","StyleSheet","absoluteFill","transform","translateY","require","alignSelf","alignItems","marginTop","fontWeight","fontSize","color","styles","button","opacity","borderColor","borderWidth","top","zIndex","closeButton","rotate","textInput","updateValue","paddingVertical","borderTopColor","paddingHorizontal","borderRadius","flexDirection","borderBottomColor","borderBottomWidth","padding","create","container","marginHorizontal","marginVertical","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","left","paddingLeft","modalView","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Modal,\r\n  Button,\r\n} from \"react-native\";\r\nimport Svg, { Image, Circle, ClipPath } from \"react-native-svg\";\r\nimport Animated, { Easing } from \"react-native-reanimated\";\r\nimport { TapGestureHandler, State } from \"react-native-gesture-handler\";\r\nimport Success from \"../success\";\r\nimport Error from \"../error\";\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nconst {\r\n  Value,\r\n  event,\r\n  block,\r\n  cond,\r\n  eq,\r\n  set,\r\n  Clock,\r\n  startClock,\r\n  stopClock,\r\n  debug,\r\n  timing,\r\n  clockRunning,\r\n  interpolate,\r\n  Extrapolate,\r\n  concat,\r\n} = Animated;\r\n\r\nfunction runTiming(clock, value, dest) {\r\n  const state = {\r\n    finished: new Value(0),\r\n    position: new Value(0),\r\n    time: new Value(0),\r\n    frameTime: new Value(0),\r\n  };\r\n\r\n  const config = {\r\n    duration: 1000,\r\n    toValue: new Value(0),\r\n    easing: Easing.inOut(Easing.ease),\r\n  };\r\n\r\n  return block([\r\n    cond(clockRunning(clock), 0, [\r\n      set(state.finished, 0),\r\n      set(state.time, 0),\r\n      set(state.position, value),\r\n      set(state.frameTime, 0),\r\n      set(config.toValue, dest),\r\n      startClock(clock),\r\n    ]),\r\n    timing(clock, state, config),\r\n    cond(state.finished, debug(\"stop clock\", stopClock(clock))),\r\n    state.position,\r\n  ]);\r\n}\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      modalState: false,\r\n      loginState: false,\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n    this.buttonOpacity = new Value(1);\r\n\r\n    this.onStateChange = event([\r\n      {\r\n        nativeEvent: ({ state }) =>\r\n          block([\r\n            cond(\r\n              eq(state, State.END),\r\n              set(this.buttonOpacity, runTiming(new Clock(), 1, 0))\r\n            ),\r\n          ]),\r\n      },\r\n    ]);\r\n\r\n    this.onCloseState = event([\r\n      {\r\n        nativeEvent: ({ state }) =>\r\n          block([\r\n            cond(\r\n              eq(state, State.END),\r\n              set(this.buttonOpacity, runTiming(new Clock(), 0, 1))\r\n            ),\r\n          ]),\r\n      },\r\n    ]);\r\n\r\n    this.buttonY = interpolate(this.buttonOpacity, {\r\n      inputRange: [0, 1],\r\n      outputRange: [100, 0],\r\n      extrapolate: Extrapolate.CLAMP,\r\n    });\r\n\r\n    this.bgY = interpolate(this.buttonOpacity, {\r\n      inputRange: [0, 1],\r\n      outputRange: [-height / 3 - 50, 0],\r\n      extrapolate: Extrapolate.CLAMP,\r\n    });\r\n\r\n    this.textInputZindex = interpolate(this.buttonOpacity, {\r\n      inputRange: [0, 1],\r\n      outputRange: [1, -1],\r\n      extrapolate: Extrapolate.CLAMP,\r\n    });\r\n\r\n    this.textInputY = interpolate(this.buttonOpacity, {\r\n      inputRange: [0, 1],\r\n      outputRange: [0, 100],\r\n      extrapolate: Extrapolate.CLAMP,\r\n    });\r\n\r\n    this.textInputOpacity = interpolate(this.buttonOpacity, {\r\n      inputRange: [0, 1],\r\n      outputRange: [1, 0],\r\n      extrapolate: Extrapolate.CLAMP,\r\n    });\r\n\r\n    this.rotateCross = interpolate(this.buttonOpacity, {\r\n      inputRange: [0, 1],\r\n      outputRange: [180, 360],\r\n      extrapolate: Extrapolate.CLAMP,\r\n    });\r\n    this.logoY = interpolate(this.buttonOpacity, {\r\n      inputRange: [0, 1],\r\n      outputRange: [height / 3 + 40, 0],\r\n      extrapolate: Extrapolate.CLAMP,\r\n    });\r\n  }\r\n  manageNavigation = () => {\r\n    console.log(\"username : \" + this.state.username);\r\n    console.log(\"password : \" + this.state.password);\r\n    console.log(\"modalstate : \" + this.state.modalState);\r\n    console.log(\"loginstate : \" + this.state.loginState);\r\n\r\n    if (this.state.username === \"\") {\r\n      alert(\"Please enter username\");\r\n    } else if (this.state.password === \"\") {\r\n      alert(\"plese enter password\");\r\n    } else {\r\n      if (this.state.username == \"admin\" && this.state.password == \"admin\") {\r\n        this.setState({\r\n          loginState: true,\r\n          modalState: true,\r\n        });\r\n\r\n        this.props.navigation.navigate(\"AppDrawer\");\r\n      } else {\r\n        this.setState({\r\n          loginState: false,\r\n          modalState: true,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  updateValue(text, field) {\r\n    if (field == \"username\") {\r\n      this.setState({\r\n        username: text,\r\n      });\r\n    }\r\n    if (field == \"password\") {\r\n      this.setState({\r\n        password: text,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: \"white\",\r\n          justifyContent: \"flex-end\",\r\n        }}\r\n      >\r\n        <Animated.View\r\n          style={{\r\n            ...StyleSheet.absoluteFill,\r\n            transform: [{ translateY: this.bgY }],\r\n          }}\r\n        >\r\n          <Svg height={height + 50} width={width}>\r\n            <ClipPath id=\"clip\">\r\n              <Circle r={height + 50} cx={width / 2} />\r\n            </ClipPath>\r\n            <Image\r\n              href={require(\"../../assets/bg.jpg\")}\r\n              height={height + 50}\r\n              width={width}\r\n              preserveAspectRatio=\"xMidYMid slice\"\r\n              clipPath=\"url(#clip)\"\r\n            />\r\n          </Svg>\r\n\r\n          <Animated.View\r\n            style={{\r\n              position: \"absolute\",\r\n              alignSelf: \"center\",\r\n              alignItems: \"center\",\r\n              marginTop: 120,\r\n              transform: [{ translateY: this.logoY }],\r\n            }}\r\n          >\r\n            <Svg height={250} width={250}>\r\n              <Image\r\n                href={require(\"../../assets/logo.png\")}\r\n                position=\"absolute\"\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n              />\r\n            </Svg>\r\n            <Text style={{ fontWeight: \"bold\", fontSize: 18, color: \"white\" }}>\r\n              FARM MANAGEMENT PRO\r\n            </Text>\r\n          </Animated.View>\r\n        </Animated.View>\r\n        <View style={{ height: height / 3, justifyContent: \"center\" }}>\r\n          <TapGestureHandler onHandlerStateChange={this.onStateChange}>\r\n            <Animated.View\r\n              style={{\r\n                ...styles.button,\r\n                backgroundColor: \"#0E6655\",\r\n                opacity: this.buttonOpacity,\r\n                borderColor: \"white\",\r\n                borderWidth: 2,\r\n                transform: [{ translateY: this.buttonY }],\r\n              }}\r\n            >\r\n              <TouchableOpacity>\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", color: \"white\" }}\r\n                >\r\n                  LOGIN\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </Animated.View>\r\n          </TapGestureHandler>\r\n          <TapGestureHandler\r\n            onHandlerStateChange={() =>\r\n              this.props.navigation.navigate(\"registration\")\r\n            }\r\n          >\r\n            <Animated.View\r\n              style={{\r\n                ...styles.button,\r\n                opacity: this.buttonOpacity,\r\n                transform: [{ translateY: this.buttonY }],\r\n              }}\r\n            >\r\n              <TouchableOpacity>\r\n                <Text\r\n                  style={{ fontSize: 18, fontWeight: \"bold\", color: \"#0E6655\" }}\r\n                >\r\n                  REGISTER\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </Animated.View>\r\n          </TapGestureHandler>\r\n          <Animated.View\r\n            style={{\r\n              height: height / 3,\r\n              ...StyleSheet.absoluteFill,\r\n              top: null,\r\n              zIndex: this.textInputZindex,\r\n              opacity: this.textInputOpacity,\r\n              transform: [{ translateY: this.textInputY }],\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <TapGestureHandler onHandlerStateChange={this.onCloseState}>\r\n              <Animated.View style={styles.closeButton}>\r\n                <Animated.Text\r\n                  style={{\r\n                    fontSize: 15,\r\n                    color: \"#0E6655\",\r\n                    transform: [{ rotate: concat(this.rotateCross, \"deg\") }],\r\n                  }}\r\n                >\r\n                  X\r\n                </Animated.Text>\r\n              </Animated.View>\r\n            </TapGestureHandler>\r\n\r\n            <TextInput\r\n              placeholder=\"USERNAME\"\r\n              style={{\r\n                ...styles.textInput,\r\n                borderColor: \"#0E6655\",\r\n                borderWidth: 1,\r\n                backgroundColor: \"white\",\r\n              }}\r\n              placeholderTextColor=\"#0E6655\"\r\n              onChangeText={(text) => this.updateValue(text, \"username\")}\r\n            />\r\n            <TextInput\r\n              placeholder=\"PASSWORD\"\r\n              secureTextEntry={true}\r\n              style={{\r\n                ...styles.textInput,\r\n                borderColor: \"#0E6655\",\r\n                borderWidth: 1,\r\n                backgroundColor: \"white\",\r\n              }}\r\n              placeholderTextColor=\"#0E6655\"\r\n              onChangeText={(text) => this.updateValue(text, \"password\")}\r\n            />\r\n\r\n            <View>\r\n              {this.state.loginState ? (\r\n                <View>\r\n                  <Modal transparent={true} visible={this.state.modalState}>\r\n                    <View\r\n                      style={{\r\n                        backgroundColor: \"#000000aa\",\r\n                        flex: 1,\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <View\r\n                        style={{\r\n                          backgroundColor: \"#ffffff\",\r\n                          paddingVertical: 20,\r\n                          borderTopColor: \"black\",\r\n                          paddingHorizontal: 10,\r\n                          borderRadius: 23,\r\n                        }}\r\n                      >\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            this.setState({ modalState: false });\r\n                          }}\r\n                        >\r\n                          <View\r\n                            style={{\r\n                              flexDirection: \"row\",\r\n                              height: 20,\r\n                              width: 300,\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"center\",\r\n                            }}\r\n                          >\r\n                            <View\r\n                              style={{\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"center\",\r\n                              }}\r\n                            >\r\n                              <Text\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  fontSize: 18,\r\n                                  color: \"#222222\",\r\n                                }}\r\n                              >\r\n                                Login Successful !\r\n                              </Text>\r\n                            </View>\r\n                            <View>\r\n                              <Text>X</Text>\r\n                            </View>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                        <View\r\n                          style={{\r\n                            borderBottomColor: \"#d3d3d3\",\r\n                            borderBottomWidth: 1,\r\n                            padding: 10,\r\n                          }}\r\n                        ></View>\r\n\r\n                        <Success />\r\n\r\n                        <View\r\n                          style={{\r\n                            marginTop: 15,\r\n                            height: 40,\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <TouchableOpacity\r\n                            onPress={() => {\r\n                              this.setState({ modalState: false });\r\n                            }}\r\n                            style={{\r\n                              ...styles.button,\r\n                              justifyContent: \"center\",\r\n                              alignItems: \"center\",\r\n                              width: 180,\r\n                              height: 40,\r\n                              borderRadius: 30,\r\n                              backgroundColor: \"#0083ce\",\r\n                            }}\r\n                          >\r\n                            <Text\r\n                              style={{\r\n                                fontSize: 20,\r\n                                fontWeight: \"bold\",\r\n                                color: \"#ffffff\",\r\n                              }}\r\n                            >\r\n                              OK\r\n                            </Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      </View>\r\n                    </View>\r\n                  </Modal>\r\n                </View>\r\n              ) : (\r\n                <View>\r\n                  <Modal transparent={true} visible={this.state.modalState}>\r\n                    <View\r\n                      style={{\r\n                        backgroundColor: \"#000000aa\",\r\n                        flex: 1,\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <View\r\n                        style={{\r\n                          backgroundColor: \"#ffffff\",\r\n                          paddingVertical: 20,\r\n                          borderTopColor: \"black\",\r\n                          paddingHorizontal: 10,\r\n                          borderRadius: 23,\r\n                        }}\r\n                      >\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            this.setState({ modalState: false });\r\n                          }}\r\n                        >\r\n                          <View\r\n                            style={{\r\n                              flexDirection: \"row\",\r\n                              height: 20,\r\n                              width: 300,\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"center\",\r\n                            }}\r\n                          >\r\n                            <View\r\n                              style={{\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"center\",\r\n                              }}\r\n                            >\r\n                              <Text\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  fontSize: 18,\r\n                                  color: \"#222222\",\r\n                                }}\r\n                              >\r\n                                Incorrect Username or Password !\r\n                              </Text>\r\n                            </View>\r\n                            <View>\r\n                              <Text>X</Text>\r\n                            </View>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                        <View\r\n                          style={{\r\n                            borderBottomColor: \"#d3d3d3\",\r\n                            borderBottomWidth: 1,\r\n                            padding: 10,\r\n                          }}\r\n                        ></View>\r\n\r\n                        <Error />\r\n\r\n                        <View\r\n                          style={{\r\n                            marginTop: 15,\r\n                            height: 40,\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <TouchableOpacity\r\n                            onPress={() => {\r\n                              this.setState({ modalState: false });\r\n                            }}\r\n                            style={{\r\n                              ...styles.button,\r\n                              justifyContent: \"center\",\r\n                              alignItems: \"center\",\r\n                              width: 180,\r\n                              height: 40,\r\n                              borderRadius: 30,\r\n                              backgroundColor: \"#0083ce\",\r\n                            }}\r\n                          >\r\n                            <Text\r\n                              style={{\r\n                                fontSize: 20,\r\n                                fontWeight: \"bold\",\r\n                                color: \"#ffffff\",\r\n                              }}\r\n                            >\r\n                              OK\r\n                            </Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      </View>\r\n                    </View>\r\n                  </Modal>\r\n                </View>\r\n              )}\r\n            </View>\r\n\r\n            <TouchableOpacity onPress={this.manageNavigation}>\r\n              <Animated.View\r\n                style={{ ...styles.button, backgroundColor: \"#0E6655\" }}\r\n              >\r\n                <Text\r\n                  style={{ fontSize: 20, fontWeight: \"bold\", color: \"#ffffff\" }}\r\n                >\r\n                  Login\r\n                </Text>\r\n              </Animated.View>\r\n            </TouchableOpacity>\r\n          </Animated.View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nexport default SignIn;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"white\",\r\n    height: 70,\r\n    marginHorizontal: 20,\r\n    borderRadius: 35,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginVertical: 5,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 7,\r\n    },\r\n    shadowOpacity: 0.41,\r\n    shadowRadius: 9.11,\r\n\r\n    elevation: 14,\r\n  },\r\n  closeButton: {\r\n    height: 40,\r\n    width: 40,\r\n    borderRadius: 20,\r\n    backgroundColor: \"white\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    position: \"absolute\",\r\n    top: -20,\r\n    left: width / 2 - 20,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 7,\r\n    },\r\n    shadowOpacity: 0.41,\r\n    shadowRadius: 9.11,\r\n\r\n    elevation: 14,\r\n  },\r\n  textInput: {\r\n    height: 50,\r\n    borderRadius: 25,\r\n    borderWidth: 0.5,\r\n    marginHorizontal: 20,\r\n    paddingLeft: 10,\r\n    marginVertical: 5,\r\n    borderColor: \"rgba(0,0,0,0.2)\",\r\n  },\r\n\r\n  modalView: {\r\n    width: \"70%\",\r\n    margin: 10,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 15,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n\r\n    elevation: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}