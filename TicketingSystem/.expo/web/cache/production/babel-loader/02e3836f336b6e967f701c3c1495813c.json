{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import*as React from'react';import{NativeShape}from\"./nativeComponents\";import Path from\"./ARTSerializablePath\";import{extractTransform,extractShadow,extractOpacity,childrenAsString,extractColor,extractStrokeJoin,extractStrokeCap,extractBrush}from\"./helpers\";var Shape=function(_React$Component){_inherits(Shape,_React$Component);var _super=_createSuper(Shape);function Shape(){_classCallCheck(this,Shape);return _super.apply(this,arguments);}_createClass(Shape,[{key:\"render\",value:function render(){var props=this.props;var path=props.d||childrenAsString(props.children);var d=(path instanceof Path?path:new Path(path)).toJSON();return React.createElement(NativeShape,{fill:extractBrush(props.fill,props),opacity:extractOpacity(props),stroke:extractColor(props.stroke),strokeCap:extractStrokeCap(props.strokeCap),strokeDash:props.strokeDash||null,strokeJoin:extractStrokeJoin(props.strokeJoin),strokeWidth:props.strokeWidth,transform:extractTransform(props),shadow:extractShadow(this.props),d:d});}}]);return Shape;}(React.Component);Shape.defaultProps={strokeWidth:1,width:0,height:0};export{Shape as default};","map":{"version":3,"sources":["D:/SLIIT/3rd Year 2nd sem/CSSE/Final_Project_CSSE/frontendCSSE/TicketingSystem/node_modules/@react-native-community/art/lib/Shape.js"],"names":["React","NativeShape","Path","extractTransform","extractShadow","extractOpacity","childrenAsString","extractColor","extractStrokeJoin","extractStrokeCap","extractBrush","Shape","props","path","d","children","toJSON","fill","stroke","strokeCap","strokeDash","strokeJoin","strokeWidth","Component","defaultProps","width","height"],"mappings":"ggCASA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAAQC,WAAR,0BACA,MAAOC,CAAAA,IAAP,6BACA,OACEC,gBADF,CAEEC,aAFF,CAGEC,cAHF,CAIEC,gBAJF,CAKEC,YALF,CAMEC,iBANF,CAOEC,gBAPF,CAQEC,YARF,iB,GAmCqBC,CAAAA,K,wOAOV,CACP,GAAMC,CAAAA,KAAK,CAAG,KAAKA,KAAnB,CACA,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAACE,CAAN,EAAWR,gBAAgB,CAACM,KAAK,CAACG,QAAP,CAAxC,CACA,GAAMD,CAAAA,CAAC,CAAG,CAACD,IAAI,WAAYX,CAAAA,IAAhB,CAAuBW,IAAvB,CAA8B,GAAIX,CAAAA,IAAJ,CAASW,IAAT,CAA/B,EAA+CG,MAA/C,EAAV,CAEA,MACE,qBAAC,WAAD,EACE,IAAI,CAAEN,YAAY,CAACE,KAAK,CAACK,IAAP,CAAaL,KAAb,CADpB,CAEE,OAAO,CAAEP,cAAc,CAACO,KAAD,CAFzB,CAGE,MAAM,CAAEL,YAAY,CAACK,KAAK,CAACM,MAAP,CAHtB,CAIE,SAAS,CAAET,gBAAgB,CAACG,KAAK,CAACO,SAAP,CAJ7B,CAKE,UAAU,CAAEP,KAAK,CAACQ,UAAN,EAAoB,IALlC,CAME,UAAU,CAAEZ,iBAAiB,CAACI,KAAK,CAACS,UAAP,CAN/B,CAOE,WAAW,CAAET,KAAK,CAACU,WAPrB,CAQE,SAAS,CAAEnB,gBAAgB,CAACS,KAAD,CAR7B,CASE,MAAM,CAAER,aAAa,CAAC,KAAKQ,KAAN,CATvB,CAUE,CAAC,CAAEE,CAVL,EADF,CAcD,C,mBA1BgCd,KAAK,CAACuB,S,EAApBZ,K,CACZa,Y,CAAe,CACpBF,WAAW,CAAE,CADO,CAEpBG,KAAK,CAAE,CAFa,CAGpBC,MAAM,CAAE,CAHY,C,QADHf,K","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport {NativeShape} from './nativeComponents';\nimport Path from './ARTSerializablePath';\nimport {\n  extractTransform,\n  extractShadow,\n  extractOpacity,\n  childrenAsString,\n  extractColor,\n  extractStrokeJoin,\n  extractStrokeCap,\n  extractBrush,\n} from './helpers';\nimport type {\n  TransformProps,\n  ShadowProps,\n  OpacityProps,\n  StrokeJoin,\n  StrokeCap,\n  Brush,\n} from './types';\n\nexport type ShapeProps = TransformProps &\n  ShadowProps &\n  OpacityProps & {\n    fill?: string | Brush,\n    stroke?: string,\n    strokeCap?: StrokeCap,\n    strokeDash?: Array<number>,\n    strokeJoin?: StrokeJoin,\n    strokeWidth: number,\n    children?: React.Node,\n    d?: string | Path,\n    children?: string | Array<string>,\n    width: number,\n    height: number,\n  };\n\nexport default class Shape extends React.Component<ShapeProps> {\n  static defaultProps = {\n    strokeWidth: 1,\n    width: 0,\n    height: 0,\n  };\n\n  render() {\n    const props = this.props;\n    const path = props.d || childrenAsString(props.children);\n    const d = (path instanceof Path ? path : new Path(path)).toJSON();\n\n    return (\n      <NativeShape\n        fill={extractBrush(props.fill, props)}\n        opacity={extractOpacity(props)}\n        stroke={extractColor(props.stroke)}\n        strokeCap={extractStrokeCap(props.strokeCap)}\n        strokeDash={props.strokeDash || null}\n        strokeJoin={extractStrokeJoin(props.strokeJoin)}\n        strokeWidth={props.strokeWidth}\n        transform={extractTransform(props)}\n        shadow={extractShadow(this.props)}\n        d={d}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}