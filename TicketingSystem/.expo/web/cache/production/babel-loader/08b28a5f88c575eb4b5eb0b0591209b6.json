{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import*as React from'react';import{extractOpacity,extractTransform,extractShadow}from\"./helpers\";import{NativeGroup}from\"./nativeComponents\";var ClippingRectangle=function(_React$Component){_inherits(ClippingRectangle,_React$Component);var _super=_createSuper(ClippingRectangle);function ClippingRectangle(){_classCallCheck(this,ClippingRectangle);return _super.apply(this,arguments);}_createClass(ClippingRectangle,[{key:\"render\",value:function render(){var clipping=[this.props.x,this.props.y,this.props.width,this.props.height];var _this$props=this.props,x=_this$props.x,y=_this$props.y,propsExcludingXAndY=_objectWithoutProperties(_this$props,[\"x\",\"y\"]);return React.createElement(NativeGroup,{clipping:clipping,opacity:extractOpacity(this.props),transform:extractTransform(propsExcludingXAndY),shadow:extractShadow(this.props)},this.props.children);}}]);return ClippingRectangle;}(React.Component);ClippingRectangle.defaultProps={x:0,y:0,width:0,height:0};export{ClippingRectangle as default};","map":{"version":3,"sources":["D:/SLIIT/3rd Year 2nd sem/CSSE/Final_Project_CSSE/frontendCSSE/TicketingSystem/node_modules/@react-native-community/art/lib/ClippingRectangle.js"],"names":["React","extractOpacity","extractTransform","extractShadow","NativeGroup","ClippingRectangle","clipping","props","x","y","width","height","propsExcludingXAndY","children","Component","defaultProps"],"mappings":"qlCASA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAAQC,cAAR,CAAwBC,gBAAxB,CAA0CC,aAA1C,iBACA,OAAQC,WAAR,0B,GAaqBC,CAAAA,iB,oSAQV,CACP,GAAMC,CAAAA,QAAQ,CAAG,CACf,KAAKC,KAAL,CAAWC,CADI,CAEf,KAAKD,KAAL,CAAWE,CAFI,CAGf,KAAKF,KAAL,CAAWG,KAHI,CAIf,KAAKH,KAAL,CAAWI,MAJI,CAAjB,CADO,gBAUgC,KAAKJ,KAVrC,CAUAC,CAVA,aAUAA,CAVA,CAUGC,CAVH,aAUGA,CAVH,CAUSG,mBAVT,iDAYP,MACE,qBAAC,WAAD,EACE,QAAQ,CAAEN,QADZ,CAEE,OAAO,CAAEL,cAAc,CAAC,KAAKM,KAAN,CAFzB,CAGE,SAAS,CAAEL,gBAAgB,CAACU,mBAAD,CAH7B,CAIE,MAAM,CAAET,aAAa,CAAC,KAAKI,KAAN,CAJvB,EAKG,KAAKA,KAAL,CAAWM,QALd,CADF,CASD,C,+BA7B4Cb,KAAK,CAACc,S,EAAhCT,iB,CACZU,Y,CAAe,CACpBP,CAAC,CAAE,CADiB,CAEpBC,CAAC,CAAE,CAFiB,CAGpBC,KAAK,CAAE,CAHa,CAIpBC,MAAM,CAAE,CAJY,C,QADHN,iB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport {extractOpacity, extractTransform, extractShadow} from './helpers';\nimport {NativeGroup} from './nativeComponents';\nimport type {OpacityProps, TransformProps, ShadowProps} from './types';\n\ntype ClippingRectangleProps = OpacityProps &\n  TransformProps &\n  ShadowProps & {\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    children?: React.Node,\n  };\n\nexport default class ClippingRectangle extends React.Component<ClippingRectangleProps> {\n  static defaultProps = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  };\n\n  render() {\n    const clipping = [\n      this.props.x,\n      this.props.y,\n      this.props.width,\n      this.props.height,\n    ];\n\n    // The current clipping API requires x and y to be ignored in the transform\n    // $FlowFixMe\n    const {x, y, ...propsExcludingXAndY} = this.props;\n\n    return (\n      <NativeGroup\n        clipping={clipping}\n        opacity={extractOpacity(this.props)}\n        transform={extractTransform(propsExcludingXAndY)}\n        shadow={extractShadow(this.props)}>\n        {this.props.children}\n      </NativeGroup>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}